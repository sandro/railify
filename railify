#!/usr/bin/env ruby

# Fork of Foca's railify utility script (git://github.com/foca/utility_scripts.git)
#
# Generates a rails app (using EDGE rails), sets up a git repo for it, installs
# rspec, haml, and resource_controller
#
# USAGE: $0 some_app_name
#
# See http://github.com/sandro/railify/ for the latest version
# Released under a WTFP license (http://sam.zoy.org/wtfpl/)

RAILS_GIT_CHECKOUT = "#{ENV['HOME']}/Code/Ruby/rails_src"

class Hash
  def to_hash_string
    ret = map{|k,v| ":#{k} => '#{v}'"}
    ret.empty? ? nil : ret.join(", ")
  end
end

module Helpers
  LINE = 80

  def announcing(msg)
    puts msg
    yield msg
    print "." * (LINE - msg.size - 6)
    puts "\e[32m[DONE]\e[0m"
  end

  def silent(command)
    system "#{command} &> /dev/null"
  end

  def templates
    {
      :gitignore => %w[config/database.yml db/*.sqlite3 vendor/rails log/*.log tmp/**/* .DS_STORE] * "\n",
      :routes => ["ActionController::Routing::Routes.draw do |map|", "end"] * "\n",
      :database_dev => {"development"=>{"username"=>"root", "adapter"=>"mysql", "database"=>"#{@app_name}_development", "password"=>nil}},
      :database_test => {"test"=>{"username"=>"root", "adapter"=>"mysql", "database"=>"#{@app_name}_test", "password"=>nil}}
    }
  end

  def git(message)
    silent "git add ."
    silent "git commit -m '#{message}'"
  end

  def rake(task, args={})
    args = args.map {|name,value| "#{name.to_s.upcase}=#{value}"}.join(" ")
    silent "rake #{task} #{args}"
  end

  def rails_default_environment
    @rails_default_environment ||= File.open("config/environment.rb") do |file|
      file.readlines
    end
  end

  def gems_index
    rails_default_environment.index(rails_default_environment.grep(/config\.gem/).last) + 1
  end

  def add_gem_to_config(name, options={})
    gem_line = (["  config.gem '#{name}'"] + [options.to_hash_string]).compact.join(", ") << "\n"
    @rails_default_environment = rails_default_environment.insert(gems_index, gem_line)
  end

  def write_config
    if @rails_default_environment
      File.open("config/environment.rb", "w") {|f| f << @rails_default_environment }
    end
  end
end

if __FILE__ == $0
  require 'fileutils'
  require 'YAML'
  include Helpers

  @app_name = ARGV.first

  announcing "Fetching EDGE rails" do
   Dir.chdir(RAILS_GIT_CHECKOUT) { silent "git stash && git pull && git stash pop" }
  end

  announcing "Creating application layout" do
   silent "ruby #{RAILS_GIT_CHECKOUT}/railties/bin/rails #{@app_name}"
  end

  Dir.chdir(@app_name) do
    announcing "Setting up rails app" do
      FileUtils.rm_rf %w(README public/index.html public/images/rails.png test)
      File.open("config/database.yml", "w") {|f| f << templates[:database_dev].merge(templates[:database_test]).to_yaml}
      File.open("config/routes.rb", "w") {|f| f << templates[:routes]}
      silent "cp config/database.yml config/database.yml.example"
    end

    announcing "Configuring git repo" do
      silent "git init"
      File.open(".gitignore", "w") {|f| f << templates[:gitignore] }
      silent "touch tmp/.gitignore"
      silent "touch log/.gitignore"
      git "Basic rails app structure"
    end

    announcing "Vendoring rails" do
      FileUtils.cp_r RAILS_GIT_CHECKOUT, 'vendor/rails'
      Dir.chdir('vendor/rails') do
        FileUtils.rm_rf %w(Rakefile cleanlogs.sh pushgems.rb release.rb ci doc .gitignore .git)
        system "git --no-pager --git-dir=#{RAILS_GIT_CHECKOUT}/.git log -n 1 --pretty=fuller > REVISION"
      end
    end

    announcing "Creating databases" do
      rake "db:create:all"
    end

    announcing "Adding gems to config" do
      add_gem_to_config "rspec-rails", :lib => "spec", :version => '>= 1.1.11'
      add_gem_to_config "haml"
      add_gem_to_config 'giraffesoft-resource_controller', :lib => 'resource_controller', :source => "http://gems.github.com"
      write_config
      git "Adding gems to config"
    end

    announcing "Installing gems" do
      %x(sudo rake gems:install)
    end

    announcing "Generating RSpec base files" do
      silent "script/generate rspec"
      git "Adding RSpec base files"
    end

    announcing "Installing haml" do
      silent "haml --rails ."
      git "Installing haml gem and plugin"
    end

    announcing "Clearing logs" do
      rake "log:clear"
    end
  end
end
